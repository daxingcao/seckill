<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.caodaxing.shopseckill.dao.ShopMapper">
  <resultMap id="BaseResultMap" type="com.caodaxing.shopseckill.entity.Shop">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="shop_code" jdbcType="VARCHAR" property="shopCode" />
    <result column="shop_name" jdbcType="VARCHAR" property="shopName" />
    <result column="shop_price" jdbcType="DECIMAL" property="shopPrice" />
    <result column="shop_introduce" jdbcType="VARCHAR" property="shopIntroduce" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="is_seckill" jdbcType="TINYINT" property="isSeckill" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="shop_number" jdbcType="BIGINT" property="shopNumber" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, shop_code, shop_name, shop_price, shop_introduce, is_delete, is_seckill, start_time, 
    end_time, create_time, shop_number, remark
  </sql>
  <select id="selectByExample" parameterType="com.caodaxing.shopseckill.entity.ShopExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shop
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shop
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from shop
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.caodaxing.shopseckill.entity.ShopExample">
    delete from shop
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.caodaxing.shopseckill.entity.Shop">
    insert into shop (id, shop_code, shop_name, 
      shop_price, shop_introduce, is_delete, 
      is_seckill, start_time, end_time, 
      create_time, shop_number, remark
      )
    values (#{id,jdbcType=BIGINT}, #{shopCode,jdbcType=VARCHAR}, #{shopName,jdbcType=VARCHAR}, 
      #{shopPrice,jdbcType=DECIMAL}, #{shopIntroduce,jdbcType=VARCHAR}, #{isDelete,jdbcType=TINYINT}, 
      #{isSeckill,jdbcType=TINYINT}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{shopNumber,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.caodaxing.shopseckill.entity.Shop">
    insert into shop
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="shopCode != null">
        shop_code,
      </if>
      <if test="shopName != null">
        shop_name,
      </if>
      <if test="shopPrice != null">
        shop_price,
      </if>
      <if test="shopIntroduce != null">
        shop_introduce,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="isSeckill != null">
        is_seckill,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="shopNumber != null">
        shop_number,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="shopCode != null">
        #{shopCode,jdbcType=VARCHAR},
      </if>
      <if test="shopName != null">
        #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="shopPrice != null">
        #{shopPrice,jdbcType=DECIMAL},
      </if>
      <if test="shopIntroduce != null">
        #{shopIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="isSeckill != null">
        #{isSeckill,jdbcType=TINYINT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shopNumber != null">
        #{shopNumber,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.caodaxing.shopseckill.entity.ShopExample" resultType="java.lang.Long">
    select count(*) from shop
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shop
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.shopCode != null">
        shop_code = #{record.shopCode,jdbcType=VARCHAR},
      </if>
      <if test="record.shopName != null">
        shop_name = #{record.shopName,jdbcType=VARCHAR},
      </if>
      <if test="record.shopPrice != null">
        shop_price = #{record.shopPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.shopIntroduce != null">
        shop_introduce = #{record.shopIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
      <if test="record.isSeckill != null">
        is_seckill = #{record.isSeckill,jdbcType=TINYINT},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shopNumber != null">
        shop_number = #{record.shopNumber,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shop
    set id = #{record.id,jdbcType=BIGINT},
      shop_code = #{record.shopCode,jdbcType=VARCHAR},
      shop_name = #{record.shopName,jdbcType=VARCHAR},
      shop_price = #{record.shopPrice,jdbcType=DECIMAL},
      shop_introduce = #{record.shopIntroduce,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=TINYINT},
      is_seckill = #{record.isSeckill,jdbcType=TINYINT},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      shop_number = #{record.shopNumber,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.caodaxing.shopseckill.entity.Shop">
    update shop
    <set>
      <if test="shopCode != null">
        shop_code = #{shopCode,jdbcType=VARCHAR},
      </if>
      <if test="shopName != null">
        shop_name = #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="shopPrice != null">
        shop_price = #{shopPrice,jdbcType=DECIMAL},
      </if>
      <if test="shopIntroduce != null">
        shop_introduce = #{shopIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="isSeckill != null">
        is_seckill = #{isSeckill,jdbcType=TINYINT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shopNumber != null">
        shop_number = #{shopNumber,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.caodaxing.shopseckill.entity.Shop">
    update shop
    set shop_code = #{shopCode,jdbcType=VARCHAR},
      shop_name = #{shopName,jdbcType=VARCHAR},
      shop_price = #{shopPrice,jdbcType=DECIMAL},
      shop_introduce = #{shopIntroduce,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=TINYINT},
      is_seckill = #{isSeckill,jdbcType=TINYINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      shop_number = #{shopNumber,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <select id="queryShop" resultMap="BaseResultMap">
  	SELECT 
  	<include refid="Base_Column_List" />
  	FROM shop where shop_code=#{shopCode,jdbcType=VARCHAR}
  </select>
  <select id="shopList" resultMap="BaseResultMap">
  	SELECT
  	<include refid="Base_Column_List" />
  	FROM shop
  	<where>
  		<if test="_parameter != null">
  			AND is_seckill = #{isSeckill,jdbcType=TINYINT}
  		</if>
  	</where>
  </select>
  <update id="seckillExecution">
  	UPDATE shop SET 
  		shop_number = shop_number -1 
  	WHERE shop_code = #{shopCode,jdbcType=VARCHAR} AND 
  		start_time <![CDATA[<=]]> #{nowTime,jdbcType=TIMESTAMP} AND end_time >= #{nowTime,jdbcType=TIMESTAMP}
  </update>
  
</mapper>